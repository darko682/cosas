/* Generated By:JavaCC: Do not edit this line. lexicoConstants.java */
package rommel;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface lexicoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int ENTRADA = 1;
  /** RegularExpression Id. */
  int MAIN = 2;
  /** RegularExpression Id. */
  int SALIDA = 3;
  /** RegularExpression Id. */
  int HACERSI = 4;
  /** RegularExpression Id. */
  int HACERMIENTRAS = 5;
  /** RegularExpression Id. */
  int CONTRARIO = 6;
  /** RegularExpression Id. */
  int MIENTRAS = 7;
  /** RegularExpression Id. */
  int HACER = 8;
  /** RegularExpression Id. */
  int CICLO = 9;
  /** RegularExpression Id. */
  int FUNCION = 10;
  /** RegularExpression Id. */
  int RETORNA = 11;
  /** RegularExpression Id. */
  int OR = 12;
  /** RegularExpression Id. */
  int AND = 13;
  /** RegularExpression Id. */
  int VERDAD = 14;
  /** RegularExpression Id. */
  int FALSO = 15;
  /** RegularExpression Id. */
  int ASIGNACION = 16;
  /** RegularExpression Id. */
  int INCREMENTO = 17;
  /** RegularExpression Id. */
  int DECREMENTO = 18;
  /** RegularExpression Id. */
  int RESTA = 19;
  /** RegularExpression Id. */
  int SUMA = 20;
  /** RegularExpression Id. */
  int MULTIPLICACION = 21;
  /** RegularExpression Id. */
  int DIVISION = 22;
  /** RegularExpression Id. */
  int MODULO = 23;
  /** RegularExpression Id. */
  int MENOR = 24;
  /** RegularExpression Id. */
  int MAYOR = 25;
  /** RegularExpression Id. */
  int MENORIGUAL = 26;
  /** RegularExpression Id. */
  int MAYORIGUAL = 27;
  /** RegularExpression Id. */
  int IGUAL = 28;
  /** RegularExpression Id. */
  int DIFERENTE = 29;
  /** RegularExpression Id. */
  int PARENTECISA = 30;
  /** RegularExpression Id. */
  int PARENTCISB = 31;
  /** RegularExpression Id. */
  int LLAVEA = 32;
  /** RegularExpression Id. */
  int LLAVEC = 33;
  /** RegularExpression Id. */
  int COMA = 34;
  /** RegularExpression Id. */
  int PUNTO = 35;
  /** RegularExpression Id. */
  int PUNTOYCOMA = 36;
  /** RegularExpression Id. */
  int COMASUPERIOR = 37;
  /** RegularExpression Id. */
  int DOSCOMAS = 38;
  /** RegularExpression Id. */
  int CORCHETEA = 39;
  /** RegularExpression Id. */
  int CORCHETEB = 40;
  /** RegularExpression Id. */
  int SALTODELINEA = 41;
  /** RegularExpression Id. */
  int INT = 42;
  /** RegularExpression Id. */
  int LONG = 43;
  /** RegularExpression Id. */
  int FLOAT = 44;
  /** RegularExpression Id. */
  int BOOLEAN = 45;
  /** RegularExpression Id. */
  int CHAR = 46;
  /** RegularExpression Id. */
  int STRING = 47;
  /** RegularExpression Id. */
  int VACIO = 48;
  /** RegularExpression Id. */
  int DOUBLE = 49;
  /** RegularExpression Id. */
  int NUMEROPOSITIVO = 50;
  /** RegularExpression Id. */
  int NUMERONEGATIVO = 51;
  /** RegularExpression Id. */
  int DECIMAL = 52;
  /** RegularExpression Id. */
  int CADENA = 53;
  /** RegularExpression Id. */
  int CARACTER = 54;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 55;
  /** RegularExpression Id. */
  int ERROR1 = 56;
  /** RegularExpression Id. */
  int ERROR2 = 57;
  /** RegularExpression Id. */
  int ERROR3 = 58;
  /** RegularExpression Id. */
  int ERROR4 = 59;
  /** RegularExpression Id. */
  int ERROR5 = 60;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"entrada\"",
    "\"main\"",
    "\"salida\"",
    "\"hacer si\"",
    "\"hacer mientras\"",
    "\"contrario\"",
    "\"mientras\"",
    "\"hacer\"",
    "\"ciclo\"",
    "\"funcion\"",
    "\"retorna\"",
    "\"||\"",
    "\"&&\"",
    "\"verdad\"",
    "\"falso\"",
    "\"=\"",
    "\"++\"",
    "\"--\"",
    "\"-\"",
    "\"+\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"<\"",
    "\">\"",
    "\"<=\"",
    "\">=\"",
    "\"==\"",
    "\"!=\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\",\"",
    "\".\"",
    "\";\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"[\"",
    "\"]\"",
    "<SALTODELINEA>",
    "\"int\"",
    "\"long\"",
    "\"float\"",
    "\"boolean\"",
    "\"char\"",
    "\"string\"",
    "\"void\"",
    "\"double\"",
    "<NUMEROPOSITIVO>",
    "<NUMERONEGATIVO>",
    "<DECIMAL>",
    "<CADENA>",
    "<CARACTER>",
    "<IDENTIFICADOR>",
    "\"$\"",
    "\"#\"",
    "\"\\u00c2\\u00b0\"",
    "\"\\u00c2\\u00a1\"",
    "\"^\"",
    "\" \"",
    "\"\\n\"",
    "\"\\r\\n\"",
    "\"\\t\"",
  };

}
